import matplotlib as mpl
import matplotlib.pyplot as plt

plt.title("Plot")
plt.plot([1, 4, 9, 16])
plt.show()  # 주피터 노트북에서... 셀이 끝날 때에는 그래프를 그려줌

plt.title("제목")
plt.plot([10, 20, 30, 40], [1, 4, 9, 16])  # x좌표, y좌표 모두 지정
plt.show()

set(sorted([f.name for f in mpl.font_manager.fontManager.ttflist]))

import matplotlib.font_manager as fm

font_list = fm.findSystemFonts(fontpaths = None, fontext = 'ttf')

font_list[:]

# 폰트 설정
mpl.rc('font', family='NanumGothic')
# mpl.rc('font', family='AppleGothic')   # Mac OS의 경우
# 유니코드에서  음수 부호설정
mpl.rc('axes', unicode_minus=False)

plt.title('한글 제목')
plt.plot([10, 20, 30, 40], [1, 4, 9, 16])
plt.xlabel("엑스축 라벨")
plt.ylabel("와이축 라벨")
plt.show()

font1 = {'family': 'HYwulM', 'size': 24, 
         'color':  'black'}
font2 = {'family': 'Gulim', 'size': 18, 'weight': 'bold',
         'color':  'darkred'}
font3 = {'family': 'Batang', 'size': 24, 'weight': 'light',
         'color':  'blue'}

plt.plot([10, 20, 30, 40], [1, 4, 9, 16])
plt.title('한글 제목', fontdict=font1)
plt.xlabel('엑스 축', fontdict=font2)
plt.ylabel('와이 축', fontdict=font3)
plt.show()

plt.title("타이틀")
plt.plot([10, 20, 30, 40], [1, 4, 9, 16], 'rs--')  # red, square, --

plt.plot([10, 20, 30, 40], [1, 4, 9, 16], c='b', lw=1, ls=':',
        marker='o', ms=15, mec='g', mew=3, mfc='r')
## c:color(line), lw(lineWidth), marker:마커모양, ms(MarkerSize)
## mec(MarkerEdgeColor):마커선 색깔, mew(MarkerEdge Width), mfc(MarkerFaceColor)

plt.title('x축, y축의 범위 설정')
plt.plot([10, 20, 30, 40], [1, 4, 9, 16], c='b', lw=3, ls='--',
        marker='o', ms=15, mec='g', mew=5, mfc='r')
plt.xlim(0, 50)
plt.ylim(-10, 30)
plt.show()
# color=blue, line width=5, lineSty='--', marker="o", markerSize=15
# mec:markerEdgeColor, MarkerEdgeColor='green', MarkerEdge=마커 선 굵기, MarkerFaceColor

import numpy as np
X = np.linspace(-np.pi, np.pi, 100)  # -pi ~ pi 까지 100개 구간
Y = np.cos(X)
## x축, y축 눈금
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-1, 0, 1])

plt.plot(X, Y)
plt.show()

X = np.linspace(-np.pi, np.pi, 100)  # -pi ~ pi 까지 100개 구간
Y = np.cos(X)

plt.title('LaTex 문자열로 tick label 정의')
## x축, y축 눈금
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi],
          [r'$-\pi$', r'$-\pi/2$', r'$0$', r'$pi/2$', r'$+\pi$'])
plt.yticks([-1, 0, 1], ['Low', 'Zero', 'High'])

plt.plot(X, Y)
plt.show()

X = np.linspace(-np.pi, np.pi, 100)  # -pi ~ pi 까지 100개 구간
Y = np.cos(X)

plt.title('LaTex 문자열로 tick label 정의')
## x축, y축 눈금
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi],
          [r'$-\pi$', r'$-\pi/2$', r'$0$', r'$pi/2$', r'$+\pi$'])
plt.yticks([-1, 0, 1], ['Low', 'Zero', 'High'])
####################### Grid #####################
plt.grid(True)

plt.plot(X, Y)
plt.show()

# t = np.linspace(0, 5, 100)
t = np.arange(0., 5., 0.2)
plt.title("라인 플롯에서 여러개의 선 그리기")
plt.plot(t, t, 'r--', t, 0.5 * t**2, 'bs:', t, 0.2 * t**3, 'g^-')
# 'r--': red 점선, 
# 'bs:' blue/squre/doted line
# 'g^-': green / ^triangle up
plt.show()

X = np.linspace(-np.pi, np.pi, 200)
C, S = np.cos(X), np.sin(X)
#C = np.cos(X)
#S = np.sin(X)

plt.title("legend 실습")
plt.plot(X, C, ls=':', label="cosine")
plt.plot(X, S, ls='-.', label="sine")
plt.xlabel("시간")
plt.ylabel("진폭")
plt.legend(loc=10)
plt.show()



np.random.seed(2)
f1 = plt.figure(figsize=(10, 2))   ## 캔버스 사이즈 
plt.title("figure size : (10, 2)")
plt.plot(np.random.randn(100)) # 랜덤 그래픽
plt.show()

f1 = plt.figure()
plt.title("현재의 figure 객체")
plt.plot([1, 2, 3, 4])

f2 = plt.gcf()  # get current figure (현재 figure 가져오기)
print(f1, id(f1))
print(f2, id(f2))
plt.show()

## subplots 로 복수의 Axes 만들기
fig, axes = plt.subplots(2, 2, figsize=(10, 6))
print("fig=", fig)
print("axes=", axes)

# Axes는 2x2의 ndarray 형태의 구성이 됨
np.random.seed(15)
axes[0, 0].plot(np.random.rand(5))
axes[0, 0].set_title("axes 1")
axes[0, 1].plot(np.random.rand(5))
axes[0, 1].set_title("axes 2")
axes[1, 0].plot(np.random.rand(5))
axes[1, 0].set_title("axes 3")
axes[1, 1].plot(np.random.rand(5))
axes[1, 1].set_title("axes 4")

plt.tight_layout()
plt.show()



np.random.seed(100)

# plt.subplot(2, 2, 1)
plt.subplot(221)  ## 위와 동일!
plt.plot(np.random.rand(5))  # 0~ 1 random 5개
plt.title("axes 1")

plt.subplot(222)  
plt.plot(np.random.rand(5))  # 0~ 1 random 5개
plt.title("axes 2")

plt.subplot(223)  
plt.plot(np.random.rand(5))  # 0~ 1 random 5개
plt.title("axes 3")

plt.subplot(224)  
plt.plot(np.random.rand(5))  # 0~ 1 random 5개
plt.title("axes 4")

plt.tight_layout()
plt.show()





fig, ax0 = plt.subplots()

# x축을 공유하는 새로운 Axes
ax1 = ax0.twinx()  

# 그래프 1 그리기
ax0.set_title("2개의 y축 한 figure에서 사용하기")
ax0.plot([10, 5, 2, 9, 7], 'r', label="y0")
ax0.set_ylabel("y0")
ax0.grid(True)

# 그래프 2 그리기
ax1.plot([100, 200, 220, 180, 120], 'g:', label='y1')
ax1.set_ylabel("y1")
ax1.grid(True)

ax0.set_xlabel("공유되는 x축")

plt.show()
